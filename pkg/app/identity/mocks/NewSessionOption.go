// Code generated by mockery v2.26.1. DO NOT EDIT.

package mocks

import (
	entity "github.com/karta0898098/iam/pkg/app/identity/entity"
	mock "github.com/stretchr/testify/mock"
)

// NewSessionOption is an autogenerated mock type for the NewSessionOption type
type NewSessionOption struct {
	mock.Mock
}

type NewSessionOption_Expecter struct {
	mock *mock.Mock
}

func (_m *NewSessionOption) EXPECT() *NewSessionOption_Expecter {
	return &NewSessionOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: p
func (_m *NewSessionOption) Execute(p *entity.Session) {
	_m.Called(p)
}

// NewSessionOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type NewSessionOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - p *entity.Session
func (_e *NewSessionOption_Expecter) Execute(p interface{}) *NewSessionOption_Execute_Call {
	return &NewSessionOption_Execute_Call{Call: _e.mock.On("Execute", p)}
}

func (_c *NewSessionOption_Execute_Call) Run(run func(p *entity.Session)) *NewSessionOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*entity.Session))
	})
	return _c
}

func (_c *NewSessionOption_Execute_Call) Return() *NewSessionOption_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *NewSessionOption_Execute_Call) RunAndReturn(run func(*entity.Session)) *NewSessionOption_Execute_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewNewSessionOption interface {
	mock.TestingT
	Cleanup(func())
}

// NewNewSessionOption creates a new instance of NewSessionOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNewSessionOption(t mockConstructorTestingTNewNewSessionOption) *NewSessionOption {
	mock := &NewSessionOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
