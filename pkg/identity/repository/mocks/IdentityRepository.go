// Code generated by mockery v2.6.0. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/karta0898098/iam/pkg/identity/domain"
	mock "github.com/stretchr/testify/mock"

	model "github.com/karta0898098/iam/pkg/identity/repository/model"
)

// IdentityRepository is an autogenerated mock type for the IdentityRepository type
type IdentityRepository struct {
	mock.Mock
}

// CreateProfile provides a mock function with given fields: ctx, params
func (_m *IdentityRepository) CreateProfile(ctx context.Context, params *model.Profile) (*domain.Profile, error) {
	ret := _m.Called(ctx, params)

	var r0 *domain.Profile
	if rf, ok := ret.Get(0).(func(context.Context, *model.Profile) *domain.Profile); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Profile)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *model.Profile) error); ok {
		r1 = rf(ctx, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetProfile provides a mock function with given fields: ctx, opts
func (_m *IdentityRepository) GetProfile(ctx context.Context, opts *model.GetProfileOption) (*domain.Profile, error) {
	ret := _m.Called(ctx, opts)

	var r0 *domain.Profile
	if rf, ok := ret.Get(0).(func(context.Context, *model.GetProfileOption) *domain.Profile); ok {
		r0 = rf(ctx, opts)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Profile)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *model.GetProfileOption) error); ok {
		r1 = rf(ctx, opts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateProfile provides a mock function with given fields: ctx, id, opts
func (_m *IdentityRepository) UpdateProfile(ctx context.Context, id int64, opts *model.UpdateProfileOption) error {
	ret := _m.Called(ctx, id, opts)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, *model.UpdateProfileOption) error); ok {
		r0 = rf(ctx, id, opts)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
